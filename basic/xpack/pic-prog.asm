; Begin
	R0L EQU 0x20
	R0H EQU 0x21
	R1L EQU 0x22
	R1H EQU 0x23
	R2L EQU 0x24
	R2H EQU 0x25
	R3L EQU 0x26
	R3H EQU 0x27
	R4L EQU 0x28
	R4H EQU 0x29
	R5L EQU 0x2A
	R5H EQU 0x2B
	ORG 0x0000
	BCF PCLATH,3
	BCF PCLATH,4
	GOTO L0001
	ORG 0x0004
	RETFIE
L0001:
; 1:  'ESPECIFICACIONES:
; 2:  'PUERTO B:
; 3:  ' RB0, RB1. MOTOR PLASTICO 1
; 4:  ' RB2, RB3. MOTOR PLASTICO 2
; 5:  ' RB4, RB5. MOTOR TENAZA
; 6:  ' RB6, RB7. MOTOR TENAZA inversa
; 7: 
; 8:  'PUERTO A:
; 9:  ' RA0, RA1,RA2,RA3. MOTOR EMBUDO
; 10:  ' RA4. RESISTENCIAS CALOR
; 11: 
; 12:  'Motores plastico
; 13: Const timeout1 = 0 '50
;       The value of 'timeout1' is 0
; 14: Const num1 = 4 '1000
;       The value of 'num1' is 4
; 15:  'motor tenazas fase 1
; 16: Const timeout2 = 0 '50
;       The value of 'timeout2' is 0
; 17: Const num2 = 4 '1000
;       The value of 'num2' is 4
; 18:  'motor tenazas fase 2
; 19: Const timeout3 = 0 '50
;       The value of 'timeout3' is 0
; 20: Const num3 = 4 '1000
;       The value of 'num3' is 4
; 21:  'motor embudo
; 22: Const timeout4 = 0 '50
;       The value of 'timeout4' is 0
; 23: Const num4 = 4 '1000
;       The value of 'num4' is 4
; 24:  'resistencia calor
; 25: Const timeout5 = 0 '500
;       The value of 'timeout5' is 0
; 26:  'tiempo de llenado
; 27: Const timeout6 = 0 '150
;       The value of 'timeout6' is 0
; 28: 
; 29:  'asignamos todos los puertos como salidas
; 30: TRISA = 0
	BSF STATUS,RP0
	CLRF 0x05
	BCF STATUS,RP0
; 31: TRISB = 0
	BSF STATUS,RP0
	CLRF 0x06
	BCF STATUS,RP0
; 32: TRISC = 0
	BSF STATUS,RP0
	CLRF 0x07
	BCF STATUS,RP0
; 33: 
; 34: PORTA = 0
	CLRF 0x05
; 35: PORTB = 0
	CLRF 0x06
; 36:  '-------INICIO----------
; 37:  'movemos motores de plastico
; 38: Dim i As Word
;       The address of 'i' is 0x2C
	i EQU 0x2C
; 39: Dim j As Byte
;       The address of 'j' is 0x2E
	j EQU 0x2E
; 40: 
; 41: For i = 0 To num1
	CLRF 0x2C
	CLRF 0x2D
L0002:
	MOVF 0x2C,W
	MOVWF R0L
	MOVF 0x2D,W
	MOVWF R0H
	CLRF R1H
	MOVLW 0x04
	CALL C006
	BTFSS STATUS,Z
	GOTO L0003
; 42: PORTB = %00000101
	MOVLW 0x05
	MOVWF 0x06
; 43: WaitMs timeout1
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 44: PORTB = %00001010
	MOVLW 0x0A
	MOVWF 0x06
; 45: WaitMs timeout1
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 46: Next i
	MOVLW 0x01
	ADDWF 0x2C,F
	MOVLW 0x00
	BTFSC STATUS,C
	ADDLW 0x01
	BTFSC STATUS,C
	GOTO L0003
	ADDWF 0x2D,F
	BTFSS STATUS,C
	GOTO L0002
L0003:	MOVLW 0x1F
	ANDWF STATUS,F
; 47:  'apagamos motores plastico
; 48: PORTB = 0
	CLRF 0x06
; 49:  'activamos tenazas
; 50: 
; 51: For i = 0 To num2
	CLRF 0x2C
	CLRF 0x2D
L0004:
	MOVF 0x2C,W
	MOVWF R0L
	MOVF 0x2D,W
	MOVWF R0H
	CLRF R1H
	MOVLW 0x04
	CALL C006
	BTFSS STATUS,Z
	GOTO L0005
; 52: PORTB = %00010000
	MOVLW 0x10
	MOVWF 0x06
; 53: WaitMs timeout2
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 54: PORTB = %00100000
	MOVLW 0x20
	MOVWF 0x06
; 55: WaitMs timeout2
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 56: Next i
	MOVLW 0x01
	ADDWF 0x2C,F
	MOVLW 0x00
	BTFSC STATUS,C
	ADDLW 0x01
	BTFSC STATUS,C
	GOTO L0005
	ADDWF 0x2D,F
	BTFSS STATUS,C
	GOTO L0004
L0005:	MOVLW 0x1F
	ANDWF STATUS,F
; 57: 
; 58:  'activamos portezuela embudo
; 59: Dim rot As Word
;       The address of 'rot' is 0x2F
	rot EQU 0x2F
; 60: 
; 61: For i = 0 To num3
	CLRF 0x2C
	CLRF 0x2D
L0006:
	MOVF 0x2C,W
	MOVWF R0L
	MOVF 0x2D,W
	MOVWF R0H
	CLRF R1H
	MOVLW 0x04
	CALL C006
	BTFSS STATUS,Z
	GOTO L0007
; 62: rot = %0011
	MOVLW 0x03
	MOVWF 0x2F
	CLRF 0x30
; 63: For j = 0 To 3
	CLRF 0x2E
L0008:
	MOVF 0x2E,W
	SUBLW 0x03
	BTFSS STATUS,C
	GOTO L0009
; 64: If j = 0 Then
	MOVF 0x2E,W
	SUBLW 0x00
	BTFSS STATUS,Z
	GOTO L0010
; 65: PORTA = rot
	MOVF 0x2F,W
	MOVWF 0x05
; 66: Else
	GOTO L0011
L0010:	MOVLW 0x1F
	ANDWF STATUS,F
; 67: If j = 3 Then
	MOVF 0x2E,W
	SUBLW 0x03
	BTFSS STATUS,Z
	GOTO L0012
; 68: PORTA = %1001
	MOVLW 0x09
	MOVWF 0x05
; 69: Else
	GOTO L0013
L0012:	MOVLW 0x1F
	ANDWF STATUS,F
; 70: rot = ShiftLeft(rot, 1)
	MOVF 0x2F,W
	MOVWF R0L
	MOVF 0x30,W
	MOVWF R0H
	MOVLW 0x01
	CALL SL00
	MOVWF 0x2F
	MOVF R0H,W
	MOVWF 0x30
; 71: PORTA = rot
	MOVF 0x2F,W
	MOVWF 0x05
; 72: Endif
L0013:	MOVLW 0x1F
	ANDWF STATUS,F
; 73: Endif
L0011:	MOVLW 0x1F
	ANDWF STATUS,F
; 74: WaitMs timeout3
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 75: Next j
	MOVLW 0x01
	ADDWF 0x2E,F
	BTFSS STATUS,C
	GOTO L0008
L0009:	MOVLW 0x1F
	ANDWF STATUS,F
; 76: Next i
	MOVLW 0x01
	ADDWF 0x2C,F
	MOVLW 0x00
	BTFSC STATUS,C
	ADDLW 0x01
	BTFSC STATUS,C
	GOTO L0007
	ADDWF 0x2D,F
	BTFSS STATUS,C
	GOTO L0006
L0007:	MOVLW 0x1F
	ANDWF STATUS,F
; 77: WaitMs timeout6
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 78:  'cerramos portezuela
; 79: For i = 0 To num3
	CLRF 0x2C
	CLRF 0x2D
L0014:
	MOVF 0x2C,W
	MOVWF R0L
	MOVF 0x2D,W
	MOVWF R0H
	CLRF R1H
	MOVLW 0x04
	CALL C006
	BTFSS STATUS,Z
	GOTO L0015
; 80: rot = %1100
	MOVLW 0x0C
	MOVWF 0x2F
	CLRF 0x30
; 81: For j = 0 To 3
	CLRF 0x2E
L0016:
	MOVF 0x2E,W
	SUBLW 0x03
	BTFSS STATUS,C
	GOTO L0017
; 82: If j = 0 Then
	MOVF 0x2E,W
	SUBLW 0x00
	BTFSS STATUS,Z
	GOTO L0018
; 83: PORTA = rot
	MOVF 0x2F,W
	MOVWF 0x05
; 84: Else
	GOTO L0019
L0018:	MOVLW 0x1F
	ANDWF STATUS,F
; 85: If j = 3 Then
	MOVF 0x2E,W
	SUBLW 0x03
	BTFSS STATUS,Z
	GOTO L0020
; 86: PORTA = %1001
	MOVLW 0x09
	MOVWF 0x05
; 87: Else
	GOTO L0021
L0020:	MOVLW 0x1F
	ANDWF STATUS,F
; 88: rot = ShiftRight(rot, 1)
	MOVF 0x2F,W
	MOVWF R0L
	MOVF 0x30,W
	MOVWF R0H
	MOVLW 0x01
	CALL SR00
	MOVWF 0x2F
	MOVF R0H,W
	MOVWF 0x30
; 89: PORTA = rot
	MOVF 0x2F,W
	MOVWF 0x05
; 90: Endif
L0021:	MOVLW 0x1F
	ANDWF STATUS,F
; 91: Endif
L0019:	MOVLW 0x1F
	ANDWF STATUS,F
; 92: WaitMs timeout3
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 93: Next j
	MOVLW 0x01
	ADDWF 0x2E,F
	BTFSS STATUS,C
	GOTO L0016
L0017:	MOVLW 0x1F
	ANDWF STATUS,F
; 94: Next i
	MOVLW 0x01
	ADDWF 0x2C,F
	MOVLW 0x00
	BTFSC STATUS,C
	ADDLW 0x01
	BTFSC STATUS,C
	GOTO L0015
	ADDWF 0x2D,F
	BTFSS STATUS,C
	GOTO L0014
L0015:	MOVLW 0x1F
	ANDWF STATUS,F
; 95: 
; 96:  'cerramos tenazas
; 97: For i = 0 To num4
	CLRF 0x2C
	CLRF 0x2D
L0022:
	MOVF 0x2C,W
	MOVWF R0L
	MOVF 0x2D,W
	MOVWF R0H
	CLRF R1H
	MOVLW 0x04
	CALL C006
	BTFSS STATUS,Z
	GOTO L0023
; 98: PORTB = %10000000
	MOVLW 0x80
	MOVWF 0x06
; 99: WaitMs timeout4
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 100: PORTB = %01000000
	MOVLW 0x40
	MOVWF 0x06
; 101: WaitMs timeout4
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 102: Next i
	MOVLW 0x01
	ADDWF 0x2C,F
	MOVLW 0x00
	BTFSC STATUS,C
	ADDLW 0x01
	BTFSC STATUS,C
	GOTO L0023
	ADDWF 0x2D,F
	BTFSS STATUS,C
	GOTO L0022
L0023:	MOVLW 0x1F
	ANDWF STATUS,F
; 103:  'encendemos resistencia
; 104: PORTA = %10000000
	MOVLW 0x80
	MOVWF 0x05
; 105: WaitMs timeout5
	MOVLW 0x00
	MOVWF R0L
	CLRF R0H
	CALL W001
; 106:  'apagamos resistencias
; 107: PORTA = 0
	CLRF 0x05
; 108:  'abrimos tenazas
; 109:  ' como usamos reversa en motor 2 fases???
; 110: 
; 111:  '---------FIN-----------
; 112: 
; End of program
L0024:	GOTO L0024
; Comparison Routine
C001:	MOVWF R1L
	MOVLW 0x05
	GOTO C007
C002:	MOVWF R1L
	MOVLW 0x02
	GOTO C007
C003:	MOVWF R1L
	MOVLW 0x06
	GOTO C007
C004:	MOVWF R1L
	MOVLW 0x03
	GOTO C007
C005:	MOVWF R1L
	MOVLW 0x04
	GOTO C007
C006:	MOVWF R1L
	MOVLW 0x01
	GOTO C007
C007:	MOVWF R4L
	MOVF R1H,W
	SUBWF R0H,W
	BTFSS STATUS,Z
	GOTO C008
	MOVF R1L,W
	SUBWF R0L,W
C008:	MOVLW 0x04
	BTFSC STATUS,C
	MOVLW 0x01
	BTFSC STATUS,Z
	MOVLW 0x02
	ANDWF R4L,W
	BTFSS STATUS,Z
	MOVLW 0xFF
	RETURN
; Waitms Routine
W001:	MOVF R0L,F
	BTFSC STATUS,Z
	GOTO W002
	CALL W003
	DECF R0L,F
	NOP
	NOP
	NOP
	NOP
	NOP
	GOTO W001
W002:	MOVF R0H,F
	BTFSC STATUS,Z
	RETURN
	CALL W003
	DECF R0H,F
	DECF R0L,F
	GOTO W001
W003:	MOVLW 0x0C
	MOVWF R2H
W004:	DECFSZ R2H,F
	GOTO W004
	NOP
	NOP
	MOVLW 0x62
	MOVWF R1L
W005:	DECFSZ R1L,F
	GOTO W006
	CALL W007
	CALL W007
	NOP
	NOP
	RETURN
W006:	CALL W007
	GOTO W005
W007:	MOVLW 0x0D
	MOVWF R2L
W008:	DECFSZ R2L,F
	GOTO W008
	NOP
	RETURN
; ShiftLeft Routine
SL01:	BCF STATUS,C
	RLF R0L,F
	RLF R0H,F
SL00:	ADDLW 0xFF
	BTFSC STATUS,C
	GOTO SL01
	MOVF R0L,W
	RETURN
; ShiftRight Routine
SR01:	BCF STATUS,C
	RRF R0H,F
	RRF R0L,F
SR00:	ADDLW 0xFF
	BTFSC STATUS,C
	GOTO SR01
	MOVF R0L,W
	RETURN
; End of listing
	END
