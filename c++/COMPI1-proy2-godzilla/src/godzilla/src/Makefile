#############################################################################
# Makefile for building: ../bin/godzilla
# Generated by qmake (1.07a) (Qt 3.3.4) on: Mon May  1 15:44:38 2006
# Project:  src.pro
# Template: app
# Command: $(QMAKE) -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = godzilla.h \
		ast.h \
		colaerr.h \
		constantes.h \
		symtab.h \
		parserheader.h \
		browser.h
SOURCES = godzilla.cpp \
		main.cpp \
		ast.c \
		colaerr.c \
		symtab.c \
		browser.cpp \
		embed_lex.cpp \
		embed_yacc.cpp
OBJECTS = godzilla.o \
		main.o \
		ast.o \
		colaerr.o \
		symtab.o \
		browser.o \
		embed_lex.o \
		embed_yacc.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_godzilla.cpp
OBJMOC = moc_godzilla.o
DIST	   = src.pro
QMAKE_TARGET = godzilla
DESTDIR  = ../bin/
TARGET   = ../bin/godzilla

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d ../bin/ || mkdir -p ../bin/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: src.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile src.pro
qmake: 
	@$(QMAKE) -o Makefile src.pro

dist: 
	@mkdir -p .tmp/godzilla && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/godzilla/ && ( cd `dirname .tmp/godzilla` && $(TAR) godzilla.tar godzilla && $(GZIP) godzilla.tar ) && $(MOVE) `dirname .tmp/godzilla`/godzilla.tar.gz . && $(DEL_FILE) -r .tmp/godzilla

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
	-$(DEL_FILE) embed_yacc.cpp embed_yacc.h
lexclean:
	-$(DEL_FILE) embed_lex.cpp
clean: mocclean yaccclean lexclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../bin/$(TARGET) $(TARGET)


FORCE:

####### Compile

godzilla.o: godzilla.cpp godzilla.h \
		filesave.xpm \
		fileopen.xpm \
		fileprint.xpm \
		browser.h \
		parserheader.h \
		ast.h \
		colaerr.h \
		constantes.h \
		symtab.h

main.o: main.cpp parserheader.h \
		godzilla.h \
		browser.h \
		ast.h \
		colaerr.h \
		constantes.h \
		symtab.h

ast.o: ast.c ast.h \
		constantes.h \
		symtab.h \
		colaerr.h

colaerr.o: colaerr.c colaerr.h

symtab.o: symtab.c symtab.h \
		constantes.h

browser.o: browser.cpp browser.h

embed_lex.o: embed_lex.cpp ast.h \
		embed_yacc.h \
		colaerr.h \
		symtab.h \
		constantes.h

embed_yacc.o: embed_yacc.cpp embed_yacc.h \
		ast.h \
		symtab.h \
		colaerr.h \
		parserheader.h \
		constantes.h

moc_godzilla.o: moc_godzilla.cpp  godzilla.h browser.h \
		parserheader.h \
		ast.h \
		colaerr.h \
		constantes.h \
		symtab.h

moc_godzilla.cpp: $(MOC) godzilla.h
	$(MOC) godzilla.h -o moc_godzilla.cpp

embed_yacc.cpp: embed.y
	$(YACC) $(YACCFLAGS) -p embed -b embed embed.y
	-$(DEL_FILE) embed_yacc.cpp embed_yacc.h
	-$(MOVE) embed.tab.h embed_yacc.h
	-$(MOVE) embed.tab.c embed_yacc.cpp

embed_yacc.h: embed_yacc.cpp

embed_lex.cpp: embed.l 
	$(LEX) $(LEXFLAGS) -Pembed embed.l
	-$(DEL_FILE) embed_lex.cpp 
	-$(MOVE) lex.embed.c embed_lex.cpp

####### Install

install:  

uninstall:  

