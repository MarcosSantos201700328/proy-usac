#############################################################################
# Makefile for building: paconsumer
# Generated by qmake (1.07a) (Qt 3.3.7) on: Fri Nov 16 22:20:42 2007
# Project:  paconsumer.pro
# Template: app
# Command: $(QMAKE) -o Makefile paconsumer.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = main.h \
		consumidor.h \
		Productor.h \
		testw.h \
		pacmanthread.h \
		fantasmathread.h
SOURCES = main.cpp \
		consumidor.cpp \
		Productor.cpp \
		testw.cpp \
		pacmanthread.cpp \
		fantasmathread.cpp
OBJECTS = main.o \
		consumidor.o \
		Productor.o \
		testw.o \
		pacmanthread.o \
		fantasmathread.o \
		MainWindow.o \
		pacman.o \
		buffer.o \
		TestWindow.o \
		fantasma.o
FORMS = MainWindow.ui \
		pacman.ui \
		buffer.ui \
		TestWindow.ui \
		fantasma.ui
UICDECLS = MainWindow.h \
		pacman.h \
		buffer.h \
		TestWindow.h \
		fantasma.h
UICIMPLS = MainWindow.cpp \
		pacman.cpp \
		buffer.cpp \
		TestWindow.cpp \
		fantasma.cpp
SRCMOC   = moc_main.cpp \
		moc_testw.cpp \
		moc_pacmanthread.cpp \
		moc_fantasmathread.cpp \
		moc_MainWindow.cpp \
		moc_pacman.cpp \
		moc_buffer.cpp \
		moc_TestWindow.cpp \
		moc_fantasma.cpp
OBJMOC = moc_main.o \
		moc_testw.o \
		moc_pacmanthread.o \
		moc_fantasmathread.o \
		moc_MainWindow.o \
		moc_pacman.o \
		moc_buffer.o \
		moc_TestWindow.o \
		moc_fantasma.o
DIST	   = paconsumer.pro
QMAKE_TARGET = paconsumer
DESTDIR  = 
TARGET   = paconsumer

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: paconsumer.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile paconsumer.pro
qmake: 
	@$(QMAKE) -o Makefile paconsumer.pro

dist: 
	@mkdir -p .tmp/paconsumer && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/paconsumer/ && ( cd `dirname .tmp/paconsumer` && $(TAR) paconsumer.tar paconsumer && $(GZIP) paconsumer.tar ) && $(MOVE) `dirname .tmp/paconsumer`/paconsumer.tar.gz . && $(DEL_FILE) -r .tmp/paconsumer

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp main.h \
		testw.h \
		MainWindow.h \
		TestWindow.h \
		pacmanthread.h \
		Productor.h \
		consumidor.h \
		fantasmathread.h \
		pacman.h \
		fantasma.h

consumidor.o: consumidor.cpp consumidor.h \
		pacman.h \
		testw.h \
		pacmanthread.h \
		TestWindow.h \
		Productor.h \
		fantasmathread.h \
		fantasma.h

Productor.o: Productor.cpp Productor.h \
		pacmanthread.h \
		testw.h \
		pacman.h \
		TestWindow.h \
		consumidor.h \
		fantasmathread.h \
		fantasma.h

testw.o: testw.cpp testw.h \
		fantasmathread.h \
		TestWindow.h \
		pacmanthread.h \
		Productor.h \
		consumidor.h \
		pacman.h \
		fantasma.h

pacmanthread.o: pacmanthread.cpp pacmanthread.h \
		fantasmathread.h \
		pacman.h \
		fantasma.h

fantasmathread.o: fantasmathread.cpp fantasmathread.h \
		fantasma.h \
		pacmanthread.h \
		pacman.h

MainWindow.h: MainWindow.ui 
	$(UIC) MainWindow.ui -o MainWindow.h

MainWindow.cpp: MainWindow.h MainWindow.ui 
	$(UIC) MainWindow.ui -i MainWindow.h -o MainWindow.cpp

pacman.h: pacman.ui 
	$(UIC) pacman.ui -o pacman.h

pacman.cpp: pacman.h pacman.ui 
	$(UIC) pacman.ui -i pacman.h -o pacman.cpp

buffer.h: buffer.ui 
	$(UIC) buffer.ui -o buffer.h

buffer.cpp: buffer.h buffer.ui 
	$(UIC) buffer.ui -i buffer.h -o buffer.cpp

TestWindow.h: TestWindow.ui pacmanthread.h \
		pacman.h \
		fantasma.h
	$(UIC) TestWindow.ui -o TestWindow.h

TestWindow.cpp: TestWindow.h TestWindow.ui pacmanthread.h \
		pacman.h \
		fantasma.h
	$(UIC) TestWindow.ui -i TestWindow.h -o TestWindow.cpp

fantasma.h: fantasma.ui 
	$(UIC) fantasma.ui -o fantasma.h

fantasma.cpp: fantasma.h fantasma.ui 
	$(UIC) fantasma.ui -i fantasma.h -o fantasma.cpp

MainWindow.o: MainWindow.cpp MainWindow.h

pacman.o: pacman.cpp pacman.h

buffer.o: buffer.cpp buffer.h

TestWindow.o: TestWindow.cpp TestWindow.h

fantasma.o: fantasma.cpp fantasma.h

moc_main.o: moc_main.cpp  main.h MainWindow.h

moc_testw.o: moc_testw.cpp  testw.h TestWindow.h \
		pacmanthread.h \
		Productor.h \
		consumidor.h \
		fantasmathread.h \
		pacman.h \
		fantasma.h

moc_pacmanthread.o: moc_pacmanthread.cpp  pacmanthread.h pacman.h \
		fantasma.h

moc_fantasmathread.o: moc_fantasmathread.cpp  fantasmathread.h fantasma.h \
		pacmanthread.h \
		pacman.h

moc_MainWindow.o: moc_MainWindow.cpp  MainWindow.h 

moc_pacman.o: moc_pacman.cpp  pacman.h 

moc_buffer.o: moc_buffer.cpp  buffer.h 

moc_TestWindow.o: moc_TestWindow.cpp  TestWindow.h pacmanthread.h \
		pacman.h \
		fantasma.h

moc_fantasma.o: moc_fantasma.cpp  fantasma.h 

moc_main.cpp: $(MOC) main.h
	$(MOC) main.h -o moc_main.cpp

moc_testw.cpp: $(MOC) testw.h
	$(MOC) testw.h -o moc_testw.cpp

moc_pacmanthread.cpp: $(MOC) pacmanthread.h
	$(MOC) pacmanthread.h -o moc_pacmanthread.cpp

moc_fantasmathread.cpp: $(MOC) fantasmathread.h
	$(MOC) fantasmathread.h -o moc_fantasmathread.cpp

moc_MainWindow.cpp: $(MOC) MainWindow.h
	$(MOC) MainWindow.h -o moc_MainWindow.cpp

moc_pacman.cpp: $(MOC) pacman.h
	$(MOC) pacman.h -o moc_pacman.cpp

moc_buffer.cpp: $(MOC) buffer.h
	$(MOC) buffer.h -o moc_buffer.cpp

moc_TestWindow.cpp: $(MOC) TestWindow.h
	$(MOC) TestWindow.h -o moc_TestWindow.cpp

moc_fantasma.cpp: $(MOC) fantasma.h
	$(MOC) fantasma.h -o moc_fantasma.cpp

####### Install

install:  

uninstall:  

